openapi: 3.1.0
info:
  title: User Management API
  summary: REST APIs for managing user accounts and sessions
  version: '1.0'
servers:
  - url: http://localhost:3000/v1
    description: Local development environment
paths:
  /users/{userId}:
    delete:
      operationId: delete-user
      summary: Delete a user account
      description: Permanently delete a user account by their unique user ID. 
      parameters:
        - name: userId
          in: path
          required: true
          description: The unique identifier of the user to delete. 
          schema:
            type: string
      responses:
        200:
          description: Successfully deleted the user account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        401:
          description: Unauthorized request - User not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden - User lacks permission to delete this account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse' 
        404:
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/user-profile:
    get:
      operationId: get-user-profile
      summary: Retrieve the logged-in user profile
      description: Retrieve profile information of the currently logged-in user using session data.
      responses:
        200:
          description: Successfully retrieved the user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        401:
          description: Unauthorized - User not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/logout:
    post:
      operationId: logout-user
      summary: Log out the current user
      description: Logs out the user from the current session, invalidating any active session tokens.
      responses:
        200:
          description: Successfully logged out the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        401:
          description: Unauthorized - User not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#components/schemas/ErrorResponse'
components:
  schemas:
    SuccessResponse:
      type: object
      properties:
        message:
          type: string
          example: "Operation Successful"
    ErrorResponse:
      type: object
      properties:
        code:
          type: string 
          example: "UNAUTHORIZED"
        message:
          type: string
          example: "User is not authenticated."
    UserProfile:
      type: object
      properties:
        userid:
          type: string
          example: "12345"
        username:
          type: string
          example: "johndoe"
        email:
          type: string
          example: "johndoe@example.com"
        firstName:
          type: string
          example: "John"
        lastName:
          type: string
          example: "Doe"
        createdAt:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2023-01-02T12:00:00Z"