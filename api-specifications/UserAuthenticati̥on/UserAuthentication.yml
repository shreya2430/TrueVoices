openapi: 3.1.0
info:
  title: User Authentication API
  summary: REST APIs for user registration, login and profile updates
  version: '1.0'
servers:
  - url: http://localhost:3000/v1
    description: Local development environment 
paths: 
  /auth/register:
    post:
      operationId: register-user
      description: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        201:
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterResponse"
        400:
          description: Invalid input or passwords do not match
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        409:
          description: Username or email already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /auth/login:
    post:
      operationId: login-user
      description: Login an existing user
      requestBody: 
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        200:
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        400:
          description: Missing email or password
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        401:
          description: Incorrect email or password
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  # /auth/reset-password:
  #   post:
  #     operationId: reset-password
  #     description: Reset the user's password by sending instructions to their email
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/ResetPasswordRequest"
  #     responses:
  #       200:
  #         description: Password reset instructions sent to the email
  #         content:
  #           application/json:
  #             schema:
        #         $ref: "#/components/schemas/SuccessMessage"
        # 400:
        #   description: Invalid or missing email format
        #   content:
        #     application/json:
        #       schema:
        #         $ref: "#/components/schemas/Error"
        # 404:
        #   description: Email not associated with any user account
        #   content:
        #     application/json:
        #       schema:
        #         $ref: "#/components/schemas/Error"
  /auth/update-profile:
    put:
      operationId: update-profile
      description: Update the user profile information such as username, email or password 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProfileRequest"
      responses:
        200:
          description: Profile updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateProfileResponse"
        400:
          description: Invalid input or conflicts with existing data 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        401:
          description: Unauthorized or missing token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    RegisterRequest:
      type: object
      required:
        - username
        - email
        - password
        - confirmPassword
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        confirmPassword:
          type: string
          format: password
    RegisterResponse:
      type: object
      properties:
        message:
          type: string
          example: "User registered successfully"
        userId:
          type: string
        username:
          type: string
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
    LoginResponse:
      type: object
      properties:
        message:
          type: string
          example: "Login successful"
        userId:
          type: string
        token:
          type: string
        expiresIn:
          type: integer
          example: 3600
    UpdateProfileRequest:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        currentPassword:
          type: string
          description: Current password is required to update the password
        newPassword:
          type: string
          description: New password to replace t he existing password
          format: password
      required:
        - currentPassword
        - newPassword
        - username
        - email
    UpdateProfileResponse:
      type: object
      properties:
        message:
          type: string
          example: "Profile updated successfully"
        user:
          type: object
          properties:
            userId:
              type: string
            username:
              type: string
            email:
              type: string
    Error:
      type: object
      properties:
        code:
          type: string
          message:
            type: string

#Changes made:
#1. Expanded the UpdateProfileRequest
#- Added currentPasswrod and newPassword fields for password updates. 
#- Made these fields optional but required if a password update is requested
# 2. Removed /auth/reset-password:
# - its functionality is noew encapsulated in /auth/update-profile
#3. Validation Logic:
#- in the backend, validate that when newPassword is provided, currentPassword is also provided